{"version":3,"file":"static/js/514.edd1d5dd.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","const noop = (any) => any;\n\nexport { noop };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { progress } from '../../../../utils/progress.mjs';\n\n// Create a linear easing point for every 10 ms\nconst resolution = 10;\nconst generateLinearEasing = (easing, duration // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.11.11\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.11.11\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.11.11 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","arguments","get","_target","key","has","set","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","length","i","isVariantLabel","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","transformPropOrder","transformProps","Set","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","_ref","keyframes","startsWith","Math","sqrt","getValueTransition","transition","MotionGlobalConfig","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","index","noop","any","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","step","schedule","queue","add","cancel","delete","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","max","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","p","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","test","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","splitCSSVariableRegex","getVariableValue","element","depth","concat","fallback","match","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","parseFloat","clamp","number","parse","transform","alpha","scale","default","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","width","_ref2","_ref3","paddingLeft","paddingRight","height","_ref4","_ref5","y","paddingTop","paddingBottom","top","_ref6","left","_ref7","bottom","_ref8","_ref9","right","_ref10","_ref11","translateX","translateY","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","getValue","push","removeNonTranslationalTransform","measureInitialState","restore","_a","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","name","motionValue","isAsync","this","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","z","perspective","transformPerspective","opacity","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isGenerator","clearTime","time","newTime","queueMicrotask","isAnimatable","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","BaseAnimation","autoplay","delay","repeatDelay","options","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","combineFunctions","pipe","_len","transformers","_key","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","generateLinearEasing","points","numPoints","memo","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","keyframeOptions","iterations","direction","attachTimeline","animation","timeline","onfinish","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","subscriptions","methodName","controls","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","isCustomValue","toValue","resolveFinalValueInKeyframes","addUniqueItem","item","indexOf","removeItem","SubscriptionManager","handler","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","isMotionValue","addValueToWillChange","willChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addDomEvent","passive","addEventListener","removeEventListener","addPointerEvent","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","isRefObject","ref","SCALE_MIN","SCALE_MAX","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","assign","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","children","isDirty","resolveMotionValue","unwrappedValue","timeout","checkElapsed","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","addHoverEvent","callbackName","handleEvent","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","onTapStart","removePointerListener","removeFocusListener","focus","onFocus","isFocusVisible","matches","onBlur","hover","MotionConfigContext","isStatic","reducedMotion","MotionContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","useMotionRef","externalRef","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefMotionComponent","forwardRef","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","layoutGroupId","lowercaseSVGElements","isSVGComponent","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","transformName","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","svgMotionConfig","getBBox","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","createDomVisualElement"],"sourceRoot":""}