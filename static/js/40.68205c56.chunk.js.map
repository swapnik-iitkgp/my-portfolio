{"version":3,"file":"static/js/40.68205c56.chunk.js","mappings":"uLAIA,MAmGA,EAnGeA,KACb,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAUC,IAAeF,EAAAA,EAAAA,WAAS,GAEnCG,EAAmBC,IACvB,MAAMC,EAAUC,SAASC,eAAeH,GACxC,GAAIC,EAAS,CACX,MAAMG,EAASH,EAAQI,UAAY,GACnCC,OAAOC,SAAS,CACdC,IAAKJ,EACLK,SAAU,UAEd,CACAd,GAAW,EAAM,GAGnBe,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAeA,KACnBb,EAAYQ,OAAOM,QAAU,GAAG,EAGlC,OADAN,OAAOO,iBAAiB,SAAUF,GAC3B,IAAML,OAAOQ,oBAAoB,SAAUH,EAAa,GAC9D,IAEH,MAAMI,EAAW,CACf,CAAEf,GAAI,QAASgB,MAAO,SACtB,CAAEhB,GAAI,OAAQgB,MAAO,QACrB,CAAEhB,GAAI,eAAgBgB,MAAO,gBAC7B,CAAEhB,GAAI,aAAcgB,MAAO,cAC3B,CAAEhB,GAAI,WAAYgB,MAAO,YACzB,CAAEhB,GAAI,UAAWgB,MAAO,YAG1B,OACEC,EAAAA,EAAAA,MAAA,OACEC,UAAS,8DAAAC,OACPtB,EAAW,wBAA0B,kBACpCuB,SAAA,EAEHH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gEAA+DE,SAAA,EAE5EC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gBAAeE,UAC5BC,EAAAA,EAAAA,KAAA,MACEH,UAAU,2DACVI,QAASA,IAAMvB,EAAgB,QAAQqB,SACxC,oBAKHC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,iBAAgBE,UAC7BC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,iBAAgBE,SAC3BL,EAASQ,KAAKC,IACbH,EAAAA,EAAAA,KAAA,MAEEH,UAAU,2FACVI,QAASA,IAAMvB,EAAgByB,EAAKxB,IAAIoB,SAEvCI,EAAKR,OAJDQ,EAAKxB,WAUlBqB,EAAAA,EAAAA,KAAA,OAAKH,UAAU,8BAA6BE,UAC1CC,EAAAA,EAAAA,KAAA,UACEC,QAASA,IAAM3B,GAAYD,GAC3BwB,UAAU,gCACV,aAAW,yBAAwBE,SAElC1B,GAAU2B,EAAAA,EAAAA,KAACI,EAAAA,IAAO,CAACC,KAAM,MAASL,EAAAA,EAAAA,KAACM,EAAAA,IAAM,CAACD,KAAM,YAKtDhC,IACC2B,EAAAA,EAAAA,KAACO,EAAAA,EAAOC,IAAG,CACTX,UAAU,wBACVY,QAAS,CAAEC,OAAQ,GACnBC,QAAS,CAAED,OAAQ,QACnBE,WAAY,CAAEC,SAAU,IAAMd,UAE9BC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,4CAA2CE,SACtDL,EAASQ,KAAKC,IACbH,EAAAA,EAAAA,KAAA,MAEEH,UAAU,2FACVI,QAASA,IAAMvB,EAAgByB,EAAKxB,IAAIoB,SAEvCI,EAAKR,OAJDQ,EAAKxB,YAUhB,C","sources":["components/Navbar/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FaBars, FaTimes } from 'react-icons/fa';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Navbar = () => {\r\n  const [navOpen, setNavOpen] = useState(false);\r\n  const [scrolled, setScrolled] = useState(false);\r\n\r\n  const scrollToSection = (id) => {\r\n    const element = document.getElementById(id);\r\n    if (element) {\r\n      const offset = element.offsetTop - 70;\r\n      window.scrollTo({\r\n        top: offset,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n    setNavOpen(false); // Close the nav menu on mobile after clicking\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      setScrolled(window.scrollY > 50);\r\n    };\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  const navItems = [\r\n    { id: 'about', label: 'About' },\r\n    { id: 'news', label: 'News' },\r\n    { id: 'publications', label: 'Publications' },\r\n    { id: 'experience', label: 'Experience' },\r\n    { id: 'projects', label: 'Projects' },\r\n    { id: 'contact', label: 'Contact' },\r\n  ];\r\n\r\n  return (\r\n    <nav\r\n      className={`fixed top-0 left-0 w-full z-50 transition-all duration-300 ${\r\n        scrolled ? 'bg-gray-800 shadow-lg' : 'bg-transparent'\r\n      }`}\r\n    >\r\n      <div className=\"max-w-7xl mx-auto px-4 flex items-center justify-between h-16\">\r\n        {/* Brand Name */}\r\n        <div className=\"flex-shrink-0\">\r\n          <h1\r\n            className=\"text-2xl font-bold cursor-pointer text-white select-none\"\r\n            onClick={() => scrollToSection('home')}\r\n          >\r\n            My Portfolio\r\n          </h1>\r\n        </div>\r\n        {/* Desktop Menu */}\r\n        <div className=\"hidden md:flex\">\r\n          <ul className=\"flex space-x-6\">\r\n            {navItems.map((item) => (\r\n              <li\r\n                key={item.id}\r\n                className=\"cursor-pointer text-white hover:text-blue-500 transition-colors duration-300 select-none\"\r\n                onClick={() => scrollToSection(item.id)}\r\n              >\r\n                {item.label}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        {/* Mobile Menu Button */}\r\n        <div className=\"md:hidden flex items-center\">\r\n          <button\r\n            onClick={() => setNavOpen(!navOpen)}\r\n            className=\"text-white focus:outline-none\"\r\n            aria-label=\"Toggle navigation menu\"\r\n          >\r\n            {navOpen ? <FaTimes size={24} /> : <FaBars size={24} />}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {/* Mobile Menu */}\r\n      {navOpen && (\r\n        <motion.div\r\n          className=\"md:hidden bg-gray-900\"\r\n          initial={{ height: 0 }}\r\n          animate={{ height: 'auto' }}\r\n          transition={{ duration: 0.3 }}\r\n        >\r\n          <ul className=\"flex flex-col items-center py-4 space-y-4\">\r\n            {navItems.map((item) => (\r\n              <li\r\n                key={item.id}\r\n                className=\"cursor-pointer text-white hover:text-blue-500 transition-colors duration-300 select-none\"\r\n                onClick={() => scrollToSection(item.id)}\r\n              >\r\n                {item.label}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </motion.div>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"names":["Navbar","navOpen","setNavOpen","useState","scrolled","setScrolled","scrollToSection","id","element","document","getElementById","offset","offsetTop","window","scrollTo","top","behavior","useEffect","handleScroll","scrollY","addEventListener","removeEventListener","navItems","label","_jsxs","className","concat","children","_jsx","onClick","map","item","FaTimes","size","FaBars","motion","div","initial","height","animate","transition","duration"],"sourceRoot":""}